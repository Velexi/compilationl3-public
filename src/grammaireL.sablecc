Package sc;

Helpers

lettre = [['a' .. 'z'] + ['A' .. 'Z']];
chiffres = ['0' .. '9'];

Tokens

espaces = (' ' | 13 | 10)+;
commentaire= '#' [[0 .. 0xffff] - [10 + 13]]* (10 | 13 | 10 13);

plus = '+';
minus = '-';
mult ='*';
div ='/';
l_par ='(';
r_par =')';
egal = '=';
pointvirgule = ';';
ou = '|';
et = '&';
oaccolade = '{';
caccolade = '}';
crochetouvrant = '[';
crochetfermant = ']';
si = 'si';
sinon = 'sinon';
tantque = 'tantque';
faire = 'faire';
entier = 'entier';
identif='identif';
exp='exp';
bloc='bloc';

Ignored Tokens

espaces, commentaire;

Productions

programme = declavar semicolon declafonct ;

declavar =  {var} entier identif seqvar |
            {tableau} entier identif crochetouvrant exp crochetfermant seqvar |
            {rien} ;

seqvar =    {seqvar} entier identif seqvar |
            {seqtableau} entier identif crochetouvrant exp crochetfermant seqvar |
            {rien} ;

declafonct = {fonction} identif l_par declavar r_par declavar bloc declafonct | {rien} ;

